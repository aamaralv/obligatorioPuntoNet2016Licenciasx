//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Fomularios.WSConfiguraciones {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddUsuariosOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUsuarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListUsuariosOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListUsuarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRolOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveRolOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListRolOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddClientesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListClientesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAuditoriaOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLicenciamientoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLicenciamientoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListLicenciamientoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = global::Fomularios.Properties.Settings.Default.Fomularios_WSConfiguraciones_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddUsuariosCompletedEventHandler AddUsuariosCompleted;
        
        /// <remarks/>
        public event UpdateUsuarioCompletedEventHandler UpdateUsuarioCompleted;
        
        /// <remarks/>
        public event ListUsuariosCompletedEventHandler ListUsuariosCompleted;
        
        /// <remarks/>
        public event ListUsuarioCompletedEventHandler ListUsuarioCompleted;
        
        /// <remarks/>
        public event AddRolCompletedEventHandler AddRolCompleted;
        
        /// <remarks/>
        public event RemoveRolCompletedEventHandler RemoveRolCompleted;
        
        /// <remarks/>
        public event ListRolCompletedEventHandler ListRolCompleted;
        
        /// <remarks/>
        public event ListRolesCompletedEventHandler ListRolesCompleted;
        
        /// <remarks/>
        public event AddClientesCompletedEventHandler AddClientesCompleted;
        
        /// <remarks/>
        public event ListClientesCompletedEventHandler ListClientesCompleted;
        
        /// <remarks/>
        public event AddConfigCompletedEventHandler AddConfigCompleted;
        
        /// <remarks/>
        public event ListConfigCompletedEventHandler ListConfigCompleted;
        
        /// <remarks/>
        public event UpdateConfigCompletedEventHandler UpdateConfigCompleted;
        
        /// <remarks/>
        public event AddAuditoriaCompletedEventHandler AddAuditoriaCompleted;
        
        /// <remarks/>
        public event AddLicenciamientoCompletedEventHandler AddLicenciamientoCompleted;
        
        /// <remarks/>
        public event UpdateLicenciamientoCompletedEventHandler UpdateLicenciamientoCompleted;
        
        /// <remarks/>
        public event ListLicenciamientoCompletedEventHandler ListLicenciamientoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUsuarios", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddUsuarios(int idUsuario, string nombre, string usuario1, string contrasena, string correo) {
            this.Invoke("AddUsuarios", new object[] {
                        idUsuario,
                        nombre,
                        usuario1,
                        contrasena,
                        correo});
        }
        
        /// <remarks/>
        public void AddUsuariosAsync(int idUsuario, string nombre, string usuario1, string contrasena, string correo) {
            this.AddUsuariosAsync(idUsuario, nombre, usuario1, contrasena, correo, null);
        }
        
        /// <remarks/>
        public void AddUsuariosAsync(int idUsuario, string nombre, string usuario1, string contrasena, string correo, object userState) {
            if ((this.AddUsuariosOperationCompleted == null)) {
                this.AddUsuariosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUsuariosOperationCompleted);
            }
            this.InvokeAsync("AddUsuarios", new object[] {
                        idUsuario,
                        nombre,
                        usuario1,
                        contrasena,
                        correo}, this.AddUsuariosOperationCompleted, userState);
        }
        
        private void OnAddUsuariosOperationCompleted(object arg) {
            if ((this.AddUsuariosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUsuariosCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUsuario", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateUsuario(int idUsuario, string nombre, string usuario1, string contrasena, string correo) {
            this.Invoke("UpdateUsuario", new object[] {
                        idUsuario,
                        nombre,
                        usuario1,
                        contrasena,
                        correo});
        }
        
        /// <remarks/>
        public void UpdateUsuarioAsync(int idUsuario, string nombre, string usuario1, string contrasena, string correo) {
            this.UpdateUsuarioAsync(idUsuario, nombre, usuario1, contrasena, correo, null);
        }
        
        /// <remarks/>
        public void UpdateUsuarioAsync(int idUsuario, string nombre, string usuario1, string contrasena, string correo, object userState) {
            if ((this.UpdateUsuarioOperationCompleted == null)) {
                this.UpdateUsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUsuarioOperationCompleted);
            }
            this.InvokeAsync("UpdateUsuario", new object[] {
                        idUsuario,
                        nombre,
                        usuario1,
                        contrasena,
                        correo}, this.UpdateUsuarioOperationCompleted, userState);
        }
        
        private void OnUpdateUsuarioOperationCompleted(object arg) {
            if ((this.UpdateUsuarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUsuarioCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListUsuarios", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Usuario[] ListUsuarios() {
            object[] results = this.Invoke("ListUsuarios", new object[0]);
            return ((Usuario[])(results[0]));
        }
        
        /// <remarks/>
        public void ListUsuariosAsync() {
            this.ListUsuariosAsync(null);
        }
        
        /// <remarks/>
        public void ListUsuariosAsync(object userState) {
            if ((this.ListUsuariosOperationCompleted == null)) {
                this.ListUsuariosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListUsuariosOperationCompleted);
            }
            this.InvokeAsync("ListUsuarios", new object[0], this.ListUsuariosOperationCompleted, userState);
        }
        
        private void OnListUsuariosOperationCompleted(object arg) {
            if ((this.ListUsuariosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListUsuariosCompleted(this, new ListUsuariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListUsuario", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Usuario ListUsuario(int idUsu) {
            object[] results = this.Invoke("ListUsuario", new object[] {
                        idUsu});
            return ((Usuario)(results[0]));
        }
        
        /// <remarks/>
        public void ListUsuarioAsync(int idUsu) {
            this.ListUsuarioAsync(idUsu, null);
        }
        
        /// <remarks/>
        public void ListUsuarioAsync(int idUsu, object userState) {
            if ((this.ListUsuarioOperationCompleted == null)) {
                this.ListUsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListUsuarioOperationCompleted);
            }
            this.InvokeAsync("ListUsuario", new object[] {
                        idUsu}, this.ListUsuarioOperationCompleted, userState);
        }
        
        private void OnListUsuarioOperationCompleted(object arg) {
            if ((this.ListUsuarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListUsuarioCompleted(this, new ListUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddRol", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddRol(int idRol, int idUsu) {
            this.Invoke("AddRol", new object[] {
                        idRol,
                        idUsu});
        }
        
        /// <remarks/>
        public void AddRolAsync(int idRol, int idUsu) {
            this.AddRolAsync(idRol, idUsu, null);
        }
        
        /// <remarks/>
        public void AddRolAsync(int idRol, int idUsu, object userState) {
            if ((this.AddRolOperationCompleted == null)) {
                this.AddRolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRolOperationCompleted);
            }
            this.InvokeAsync("AddRol", new object[] {
                        idRol,
                        idUsu}, this.AddRolOperationCompleted, userState);
        }
        
        private void OnAddRolOperationCompleted(object arg) {
            if ((this.AddRolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveRol", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveRol(int idRol, int idUsu) {
            this.Invoke("RemoveRol", new object[] {
                        idRol,
                        idUsu});
        }
        
        /// <remarks/>
        public void RemoveRolAsync(int idRol, int idUsu) {
            this.RemoveRolAsync(idRol, idUsu, null);
        }
        
        /// <remarks/>
        public void RemoveRolAsync(int idRol, int idUsu, object userState) {
            if ((this.RemoveRolOperationCompleted == null)) {
                this.RemoveRolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveRolOperationCompleted);
            }
            this.InvokeAsync("RemoveRol", new object[] {
                        idRol,
                        idUsu}, this.RemoveRolOperationCompleted, userState);
        }
        
        private void OnRemoveRolOperationCompleted(object arg) {
            if ((this.RemoveRolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveRolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListRol", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Roles[] ListRol(int idUsu) {
            object[] results = this.Invoke("ListRol", new object[] {
                        idUsu});
            return ((Roles[])(results[0]));
        }
        
        /// <remarks/>
        public void ListRolAsync(int idUsu) {
            this.ListRolAsync(idUsu, null);
        }
        
        /// <remarks/>
        public void ListRolAsync(int idUsu, object userState) {
            if ((this.ListRolOperationCompleted == null)) {
                this.ListRolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListRolOperationCompleted);
            }
            this.InvokeAsync("ListRol", new object[] {
                        idUsu}, this.ListRolOperationCompleted, userState);
        }
        
        private void OnListRolOperationCompleted(object arg) {
            if ((this.ListRolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListRolCompleted(this, new ListRolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListRoles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Roles[] ListRoles() {
            object[] results = this.Invoke("ListRoles", new object[0]);
            return ((Roles[])(results[0]));
        }
        
        /// <remarks/>
        public void ListRolesAsync() {
            this.ListRolesAsync(null);
        }
        
        /// <remarks/>
        public void ListRolesAsync(object userState) {
            if ((this.ListRolesOperationCompleted == null)) {
                this.ListRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListRolesOperationCompleted);
            }
            this.InvokeAsync("ListRoles", new object[0], this.ListRolesOperationCompleted, userState);
        }
        
        private void OnListRolesOperationCompleted(object arg) {
            if ((this.ListRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListRolesCompleted(this, new ListRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddClientes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddClientes(string nombre, string carpeta) {
            this.Invoke("AddClientes", new object[] {
                        nombre,
                        carpeta});
        }
        
        /// <remarks/>
        public void AddClientesAsync(string nombre, string carpeta) {
            this.AddClientesAsync(nombre, carpeta, null);
        }
        
        /// <remarks/>
        public void AddClientesAsync(string nombre, string carpeta, object userState) {
            if ((this.AddClientesOperationCompleted == null)) {
                this.AddClientesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddClientesOperationCompleted);
            }
            this.InvokeAsync("AddClientes", new object[] {
                        nombre,
                        carpeta}, this.AddClientesOperationCompleted, userState);
        }
        
        private void OnAddClientesOperationCompleted(object arg) {
            if ((this.AddClientesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddClientesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListClientes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Clientes[] ListClientes() {
            object[] results = this.Invoke("ListClientes", new object[0]);
            return ((Clientes[])(results[0]));
        }
        
        /// <remarks/>
        public void ListClientesAsync() {
            this.ListClientesAsync(null);
        }
        
        /// <remarks/>
        public void ListClientesAsync(object userState) {
            if ((this.ListClientesOperationCompleted == null)) {
                this.ListClientesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListClientesOperationCompleted);
            }
            this.InvokeAsync("ListClientes", new object[0], this.ListClientesOperationCompleted, userState);
        }
        
        private void OnListClientesOperationCompleted(object arg) {
            if ((this.ListClientesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListClientesCompleted(this, new ListClientesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddConfig(string clave, string valor) {
            this.Invoke("AddConfig", new object[] {
                        clave,
                        valor});
        }
        
        /// <remarks/>
        public void AddConfigAsync(string clave, string valor) {
            this.AddConfigAsync(clave, valor, null);
        }
        
        /// <remarks/>
        public void AddConfigAsync(string clave, string valor, object userState) {
            if ((this.AddConfigOperationCompleted == null)) {
                this.AddConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddConfigOperationCompleted);
            }
            this.InvokeAsync("AddConfig", new object[] {
                        clave,
                        valor}, this.AddConfigOperationCompleted, userState);
        }
        
        private void OnAddConfigOperationCompleted(object arg) {
            if ((this.AddConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddConfigCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Configuraciones[] ListConfig() {
            object[] results = this.Invoke("ListConfig", new object[0]);
            return ((Configuraciones[])(results[0]));
        }
        
        /// <remarks/>
        public void ListConfigAsync() {
            this.ListConfigAsync(null);
        }
        
        /// <remarks/>
        public void ListConfigAsync(object userState) {
            if ((this.ListConfigOperationCompleted == null)) {
                this.ListConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListConfigOperationCompleted);
            }
            this.InvokeAsync("ListConfig", new object[0], this.ListConfigOperationCompleted, userState);
        }
        
        private void OnListConfigOperationCompleted(object arg) {
            if ((this.ListConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListConfigCompleted(this, new ListConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateConfig(string clave, string valor) {
            this.Invoke("UpdateConfig", new object[] {
                        clave,
                        valor});
        }
        
        /// <remarks/>
        public void UpdateConfigAsync(string clave, string valor) {
            this.UpdateConfigAsync(clave, valor, null);
        }
        
        /// <remarks/>
        public void UpdateConfigAsync(string clave, string valor, object userState) {
            if ((this.UpdateConfigOperationCompleted == null)) {
                this.UpdateConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateConfigOperationCompleted);
            }
            this.InvokeAsync("UpdateConfig", new object[] {
                        clave,
                        valor}, this.UpdateConfigOperationCompleted, userState);
        }
        
        private void OnUpdateConfigOperationCompleted(object arg) {
            if ((this.UpdateConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateConfigCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddAuditoria", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddAuditoria(int idRegistro, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> numeroLicencia, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> fecha, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> idUsuario, string observacion) {
            this.Invoke("AddAuditoria", new object[] {
                        idRegistro,
                        numeroLicencia,
                        fecha,
                        idUsuario,
                        observacion});
        }
        
        /// <remarks/>
        public void AddAuditoriaAsync(int idRegistro, System.Nullable<int> numeroLicencia, System.Nullable<System.DateTime> fecha, System.Nullable<int> idUsuario, string observacion) {
            this.AddAuditoriaAsync(idRegistro, numeroLicencia, fecha, idUsuario, observacion, null);
        }
        
        /// <remarks/>
        public void AddAuditoriaAsync(int idRegistro, System.Nullable<int> numeroLicencia, System.Nullable<System.DateTime> fecha, System.Nullable<int> idUsuario, string observacion, object userState) {
            if ((this.AddAuditoriaOperationCompleted == null)) {
                this.AddAuditoriaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAuditoriaOperationCompleted);
            }
            this.InvokeAsync("AddAuditoria", new object[] {
                        idRegistro,
                        numeroLicencia,
                        fecha,
                        idUsuario,
                        observacion}, this.AddAuditoriaOperationCompleted, userState);
        }
        
        private void OnAddAuditoriaOperationCompleted(object arg) {
            if ((this.AddAuditoriaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAuditoriaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddLicenciamiento", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddLicenciamiento(int numLicencia, string nomArch, string nomCliente, string idLicencia, string version, string serialMod, string concurrencia, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> fecSol, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> fecGen, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> fecCad, string respSol, string respGen) {
            this.Invoke("AddLicenciamiento", new object[] {
                        numLicencia,
                        nomArch,
                        nomCliente,
                        idLicencia,
                        version,
                        serialMod,
                        concurrencia,
                        fecSol,
                        fecGen,
                        fecCad,
                        respSol,
                        respGen});
        }
        
        /// <remarks/>
        public void AddLicenciamientoAsync(int numLicencia, string nomArch, string nomCliente, string idLicencia, string version, string serialMod, string concurrencia, System.Nullable<System.DateTime> fecSol, System.Nullable<System.DateTime> fecGen, System.Nullable<System.DateTime> fecCad, string respSol, string respGen) {
            this.AddLicenciamientoAsync(numLicencia, nomArch, nomCliente, idLicencia, version, serialMod, concurrencia, fecSol, fecGen, fecCad, respSol, respGen, null);
        }
        
        /// <remarks/>
        public void AddLicenciamientoAsync(int numLicencia, string nomArch, string nomCliente, string idLicencia, string version, string serialMod, string concurrencia, System.Nullable<System.DateTime> fecSol, System.Nullable<System.DateTime> fecGen, System.Nullable<System.DateTime> fecCad, string respSol, string respGen, object userState) {
            if ((this.AddLicenciamientoOperationCompleted == null)) {
                this.AddLicenciamientoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLicenciamientoOperationCompleted);
            }
            this.InvokeAsync("AddLicenciamiento", new object[] {
                        numLicencia,
                        nomArch,
                        nomCliente,
                        idLicencia,
                        version,
                        serialMod,
                        concurrencia,
                        fecSol,
                        fecGen,
                        fecCad,
                        respSol,
                        respGen}, this.AddLicenciamientoOperationCompleted, userState);
        }
        
        private void OnAddLicenciamientoOperationCompleted(object arg) {
            if ((this.AddLicenciamientoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLicenciamientoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLicenciamiento", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateLicenciamiento(int numLicencia, string nomArch, string nomCliente, string idLicencia, string version, string serialMod, string concurrencia, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> fecSol, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> fecGen, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> fecCad, string respSol, string respGen) {
            this.Invoke("UpdateLicenciamiento", new object[] {
                        numLicencia,
                        nomArch,
                        nomCliente,
                        idLicencia,
                        version,
                        serialMod,
                        concurrencia,
                        fecSol,
                        fecGen,
                        fecCad,
                        respSol,
                        respGen});
        }
        
        /// <remarks/>
        public void UpdateLicenciamientoAsync(int numLicencia, string nomArch, string nomCliente, string idLicencia, string version, string serialMod, string concurrencia, System.Nullable<System.DateTime> fecSol, System.Nullable<System.DateTime> fecGen, System.Nullable<System.DateTime> fecCad, string respSol, string respGen) {
            this.UpdateLicenciamientoAsync(numLicencia, nomArch, nomCliente, idLicencia, version, serialMod, concurrencia, fecSol, fecGen, fecCad, respSol, respGen, null);
        }
        
        /// <remarks/>
        public void UpdateLicenciamientoAsync(int numLicencia, string nomArch, string nomCliente, string idLicencia, string version, string serialMod, string concurrencia, System.Nullable<System.DateTime> fecSol, System.Nullable<System.DateTime> fecGen, System.Nullable<System.DateTime> fecCad, string respSol, string respGen, object userState) {
            if ((this.UpdateLicenciamientoOperationCompleted == null)) {
                this.UpdateLicenciamientoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLicenciamientoOperationCompleted);
            }
            this.InvokeAsync("UpdateLicenciamiento", new object[] {
                        numLicencia,
                        nomArch,
                        nomCliente,
                        idLicencia,
                        version,
                        serialMod,
                        concurrencia,
                        fecSol,
                        fecGen,
                        fecCad,
                        respSol,
                        respGen}, this.UpdateLicenciamientoOperationCompleted, userState);
        }
        
        private void OnUpdateLicenciamientoOperationCompleted(object arg) {
            if ((this.UpdateLicenciamientoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLicenciamientoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListLicenciamiento", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Licenciamiento[] ListLicenciamiento() {
            object[] results = this.Invoke("ListLicenciamiento", new object[0]);
            return ((Licenciamiento[])(results[0]));
        }
        
        /// <remarks/>
        public void ListLicenciamientoAsync() {
            this.ListLicenciamientoAsync(null);
        }
        
        /// <remarks/>
        public void ListLicenciamientoAsync(object userState) {
            if ((this.ListLicenciamientoOperationCompleted == null)) {
                this.ListLicenciamientoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListLicenciamientoOperationCompleted);
            }
            this.InvokeAsync("ListLicenciamiento", new object[0], this.ListLicenciamientoOperationCompleted, userState);
        }
        
        private void OnListLicenciamientoOperationCompleted(object arg) {
            if ((this.ListLicenciamientoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListLicenciamientoCompleted(this, new ListLicenciamientoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Usuario {
        
        private int idUsuarioField;
        
        private string nombreField;
        
        private string usuario1Field;
        
        private string contraseñaField;
        
        private string correoField;
        
        private Roles[] rolesField;
        
        /// <remarks/>
        public int IdUsuario {
            get {
                return this.idUsuarioField;
            }
            set {
                this.idUsuarioField = value;
            }
        }
        
        /// <remarks/>
        public string Nombre {
            get {
                return this.nombreField;
            }
            set {
                this.nombreField = value;
            }
        }
        
        /// <remarks/>
        public string Usuario1 {
            get {
                return this.usuario1Field;
            }
            set {
                this.usuario1Field = value;
            }
        }
        
        /// <remarks/>
        public string Contraseña {
            get {
                return this.contraseñaField;
            }
            set {
                this.contraseñaField = value;
            }
        }
        
        /// <remarks/>
        public string Correo {
            get {
                return this.correoField;
            }
            set {
                this.correoField = value;
            }
        }
        
        /// <remarks/>
        public Roles[] Roles {
            get {
                return this.rolesField;
            }
            set {
                this.rolesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Roles {
        
        private int idRolField;
        
        private string descripcionField;
        
        private Usuario[] usuarioField;
        
        /// <remarks/>
        public int IdRol {
            get {
                return this.idRolField;
            }
            set {
                this.idRolField = value;
            }
        }
        
        /// <remarks/>
        public string Descripcion {
            get {
                return this.descripcionField;
            }
            set {
                this.descripcionField = value;
            }
        }
        
        /// <remarks/>
        public Usuario[] Usuario {
            get {
                return this.usuarioField;
            }
            set {
                this.usuarioField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Configuraciones {
        
        private string claveField;
        
        private string valorField;
        
        /// <remarks/>
        public string Clave {
            get {
                return this.claveField;
            }
            set {
                this.claveField = value;
            }
        }
        
        /// <remarks/>
        public string Valor {
            get {
                return this.valorField;
            }
            set {
                this.valorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Auditoria {
        
        private int idRegistroField;
        
        private System.Nullable<int> numeroLicenciaField;
        
        private System.Nullable<System.DateTime> fechaField;
        
        private System.Nullable<int> idUsuarioField;
        
        private string observacionField;
        
        private Usuario usuarioField;
        
        private Licenciamiento licenciamientoField;
        
        /// <remarks/>
        public int IdRegistro {
            get {
                return this.idRegistroField;
            }
            set {
                this.idRegistroField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> NumeroLicencia {
            get {
                return this.numeroLicenciaField;
            }
            set {
                this.numeroLicenciaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Fecha {
            get {
                return this.fechaField;
            }
            set {
                this.fechaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IdUsuario {
            get {
                return this.idUsuarioField;
            }
            set {
                this.idUsuarioField = value;
            }
        }
        
        /// <remarks/>
        public string Observacion {
            get {
                return this.observacionField;
            }
            set {
                this.observacionField = value;
            }
        }
        
        /// <remarks/>
        public Usuario Usuario {
            get {
                return this.usuarioField;
            }
            set {
                this.usuarioField = value;
            }
        }
        
        /// <remarks/>
        public Licenciamiento Licenciamiento {
            get {
                return this.licenciamientoField;
            }
            set {
                this.licenciamientoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Licenciamiento {
        
        private int numeroLicenciaField;
        
        private string nombreArchivoField;
        
        private string nombreClienteField;
        
        private string idLicenciaField;
        
        private string versionField;
        
        private string serialModulosField;
        
        private string concurrenciaField;
        
        private System.Nullable<System.DateTime> fechaSolicitudField;
        
        private System.Nullable<System.DateTime> fechaGeneracionField;
        
        private System.Nullable<System.DateTime> fechaCaducidadField;
        
        private string responsableSolicitudField;
        
        private string responsableGeneracionField;
        
        private Auditoria[] auditoriaField;
        
        private Clientes clientesField;
        
        /// <remarks/>
        public int NumeroLicencia {
            get {
                return this.numeroLicenciaField;
            }
            set {
                this.numeroLicenciaField = value;
            }
        }
        
        /// <remarks/>
        public string NombreArchivo {
            get {
                return this.nombreArchivoField;
            }
            set {
                this.nombreArchivoField = value;
            }
        }
        
        /// <remarks/>
        public string NombreCliente {
            get {
                return this.nombreClienteField;
            }
            set {
                this.nombreClienteField = value;
            }
        }
        
        /// <remarks/>
        public string IdLicencia {
            get {
                return this.idLicenciaField;
            }
            set {
                this.idLicenciaField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string SerialModulos {
            get {
                return this.serialModulosField;
            }
            set {
                this.serialModulosField = value;
            }
        }
        
        /// <remarks/>
        public string Concurrencia {
            get {
                return this.concurrenciaField;
            }
            set {
                this.concurrenciaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FechaSolicitud {
            get {
                return this.fechaSolicitudField;
            }
            set {
                this.fechaSolicitudField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FechaGeneracion {
            get {
                return this.fechaGeneracionField;
            }
            set {
                this.fechaGeneracionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FechaCaducidad {
            get {
                return this.fechaCaducidadField;
            }
            set {
                this.fechaCaducidadField = value;
            }
        }
        
        /// <remarks/>
        public string ResponsableSolicitud {
            get {
                return this.responsableSolicitudField;
            }
            set {
                this.responsableSolicitudField = value;
            }
        }
        
        /// <remarks/>
        public string ResponsableGeneracion {
            get {
                return this.responsableGeneracionField;
            }
            set {
                this.responsableGeneracionField = value;
            }
        }
        
        /// <remarks/>
        public Auditoria[] Auditoria {
            get {
                return this.auditoriaField;
            }
            set {
                this.auditoriaField = value;
            }
        }
        
        /// <remarks/>
        public Clientes Clientes {
            get {
                return this.clientesField;
            }
            set {
                this.clientesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Clientes {
        
        private string nombreField;
        
        private string carpetaField;
        
        private Licenciamiento[] licenciamientoField;
        
        /// <remarks/>
        public string Nombre {
            get {
                return this.nombreField;
            }
            set {
                this.nombreField = value;
            }
        }
        
        /// <remarks/>
        public string Carpeta {
            get {
                return this.carpetaField;
            }
            set {
                this.carpetaField = value;
            }
        }
        
        /// <remarks/>
        public Licenciamiento[] Licenciamiento {
            get {
                return this.licenciamientoField;
            }
            set {
                this.licenciamientoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddUsuariosCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateUsuarioCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListUsuariosCompletedEventHandler(object sender, ListUsuariosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListUsuariosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListUsuariosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Usuario[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Usuario[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListUsuarioCompletedEventHandler(object sender, ListUsuarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Usuario Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Usuario)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddRolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RemoveRolCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListRolCompletedEventHandler(object sender, ListRolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListRolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListRolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Roles[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Roles[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListRolesCompletedEventHandler(object sender, ListRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Roles[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Roles[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddClientesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListClientesCompletedEventHandler(object sender, ListClientesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListClientesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListClientesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Clientes[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Clientes[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddConfigCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListConfigCompletedEventHandler(object sender, ListConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Configuraciones[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Configuraciones[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateConfigCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddAuditoriaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddLicenciamientoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateLicenciamientoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListLicenciamientoCompletedEventHandler(object sender, ListLicenciamientoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListLicenciamientoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListLicenciamientoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Licenciamiento[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Licenciamiento[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591